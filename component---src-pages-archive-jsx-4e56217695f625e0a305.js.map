{"version":3,"sources":["webpack:///./src/pages/archive.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_withRoot__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_posts__WEBPACK_IMPORTED_MODULE_4__","_components_section__WEBPACK_IMPORTED_MODULE_5__","_components_tools__WEBPACK_IMPORTED_MODULE_6__","Archive","_ref","posts","data","allMarkdownRemark","edges","a","createElement","title","Object","propTypes","shape","isRequired"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KAUA,SAASe,EAATC,GAA2B,IACVC,EADUD,EAARE,KACaC,kBAAtBC,MACR,OACEd,EAAAe,EAAAC,cAACX,EAAA,EAAD,CAAKY,MAAM,WACTjB,EAAAe,EAAAC,cAACT,EAAA,EAAD,KACEP,EAAAe,EAAAC,cAACV,EAAA,EAAD,CAAOK,MAAOO,OAAAV,EAAA,EAAAU,CAAQP,OAM9BF,EAAQU,UAAY,CAClBP,KAAMT,EAAAY,EAAUK,QAAQC,YAGnB,IAAMvB,EAAS,aA+BPF,EAAA,QAAAsB,OAAAd,EAAA,GAASK","file":"component---src-pages-archive-jsx-4e56217695f625e0a305.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport withRoot from '../withRoot';\nimport App from '../components/layout';\nimport Posts from '../components/posts';\nimport Section from '../components/section';\nimport { flatten } from '../components/tools';\n\nfunction Archive({ data }) {\n  const { edges: posts } = data.allMarkdownRemark;\n  return (\n    <App title=\"Archive\">\n      <Section>\n        <Posts posts={flatten(posts)} />\n      </Section>\n    </App>\n  );\n}\n\nArchive.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n\nexport const pageQuery = graphql`\n  query ArchiveQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: {type: {in: [\"photo\", \"article\", \"friends\"] }  }}\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 150)\n          id\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            country\n            cover {\n              childImageSharp {\n                fluid(maxHeight: 250, maxWidth: 350, quality: 100) {\n                  ...GatsbyImageSharpFluid\n              }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default withRoot(Archive);\n"],"sourceRoot":""}