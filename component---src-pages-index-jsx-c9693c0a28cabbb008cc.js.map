{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/posts.jsx","webpack:///./src/components/map.jsx"],"names":["Index","_ref","classes","posts","data","allMarkdownRemark","edges","coords","Object","_components_tools__WEBPACK_IMPORTED_MODULE_9__","b","map","post","node","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_3___default","container","spacing","className","spacer","item","xs","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4___default","variant","headline","_components_posts__WEBPACK_IMPORTED_MODULE_7__","_components_map__WEBPACK_IMPORTED_MODULE_8__","cities","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","shape","isRequired","pageQuery","__webpack_exports__","default","_withRoot__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__","withStyles","theme","marginBottom","unit","marginTop","padding","textAlign","Posts","length","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_4___default","sm","key","id","_cardPost__WEBPACK_IMPORTED_MODULE_5__","title","frontmatter","date","cover","tags","country","timeToRead","content","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2___default","component","excerpt","path","expand","type","arrayOf","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__","media","height","paddingTop","chip","margin","textDecoration","paddingBottom","ZoomPan","props","_this","_Component","call","this","state","marker","handleHover","setState","render","_this2","_this$props","center","zoom","react__WEBPACK_IMPORTED_MODULE_2___default","wrapper","react_simple_maps__WEBPACK_IMPORTED_MODULE_6__","ComposableMap","projectionConfig","scale","width","style","ZoomableGroup","disablePanning","Geographies","geography","_static_world_50m_simplified_json__WEBPACK_IMPORTED_MODULE_9__","geographies","projection","i","Geography","fill","stroke","strokeWidth","outline","hover","Markers","Marker","onMouseEnter","name","_tools__WEBPACK_IMPORTED_MODULE_8__","onMouseLeave","onClick","gatsby__WEBPACK_IMPORTED_MODULE_3__","c","push","pressed","transform","strokeLinecap","strokeMiterlimit","strokeLinejoin","d","cx","cy","r","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5___default","N","react__WEBPACK_IMPORTED_MODULE_2__","Component","prop_types__WEBPACK_IMPORTED_MODULE_4___default","number","defaultProps","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_7__"],"mappings":"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","file":"component---src-pages-index-jsx-c9693c0a28cabbb008cc.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport withRoot from '../withRoot';\nimport App from '../components/layout';\nimport Posts from '../components/posts';\nimport Map from '../components/map';\nimport { coordinates } from '../components/tools';\n\n\nconst styles = theme => ({\n  spacer: {\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 3,\n  },\n  headline: {\n    padding: `${theme.spacing.unit * 2} 0`,\n    textAlign: 'center',\n  },\n});\n\nfunction Index({\n  classes, data,\n}) {\n  const { edges: posts } = data.allMarkdownRemark;\n  const coords = coordinates(posts.map(post => post.node));\n  return (\n    <App>\n      <Grid container spacing={24} className={classes.spacer}>\n        <Grid item xs={12}>\n          <Typography variant=\"display1\" className={classes.headline}>\n            Latest articles\n          </Typography>\n        </Grid>\n        <Posts posts={posts} />\n        <Grid item xs={12}>\n          <Typography variant=\"display1\" className={classes.headline}>\n            Where we have been!\n          </Typography>\n        </Grid>\n        <Map cities={coords} />\n      </Grid>\n    </App>\n  );\n}\n\nIndex.propTypes = {\n  classes: PropTypes.shape().isRequired,\n  data: PropTypes.shape().isRequired,\n};\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 6\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 150)\n          id\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            coordinates {\n              name\n              country\n              coordinates\n            }\n            country\n            cover {\n              childImageSharp{\n                fluid(maxHeight: 300) {\n                    ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default withRoot(withStyles(styles)(Index));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport CardPost from './cardPost';\n\n\nconst styles = theme => ({\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  chip: {\n    margin: theme.spacing.unit,\n  },\n  title: {\n    textDecoration: 'none',\n  },\n  spacer: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nfunction Posts({\n  classes, posts,\n}) {\n  if (posts.length > 0) {\n    return posts.map(post => (\n      <Grid item xs={12} sm={6} key={post.node.id} className={classes.spacer}>\n        <CardPost\n          title={post.node.frontmatter.title}\n          date={post.node.frontmatter.date}\n          cover={post.node.frontmatter.cover}\n          tags={post.node.frontmatter.tags}\n          country={post.node.frontmatter.country}\n          timeToRead={post.node.timeToRead}\n          content={(\n            <Typography component=\"p\">\n              {post.node.excerpt}\n            </Typography>\n          )}\n          path={post.node.frontmatter.path}\n          expand\n          type=\"list\"\n        />\n      </Grid>\n    ));\n  }\n}\n\nPosts.propTypes = {\n  classes: PropTypes.shape().isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n\nexport default withStyles(styles)(Posts);\n","\nimport React, { Component } from 'react';\nimport { push } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Markers,\n  Marker,\n} from 'react-simple-maps';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { capitalize } from './tools';\nimport worldJson from '../static/world-50m-simplified.json';\n\n\nconst styles = {\n  wrapper: {\n    width: '100%',\n    margin: '0 auto',\n  },\n};\n\nclass ZoomPan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      marker: false,\n    };\n  }\n\n  handleHover(marker) {\n    this.setState({\n      marker,\n    });\n  }\n\n  render() {\n    const {\n      cities,\n      classes,\n      center,\n      zoom,\n    } = this.props;\n\n    return (\n      <div>\n        <div className={classes.wrapper}>\n          <ComposableMap\n            projectionConfig={{\n              scale: 340,\n            }}\n            width={1400}\n            height={900}\n            style={{\n              width: '100%',\n              height: 'auto',\n            }}\n          >\n            <ZoomableGroup center={center} zoom={zoom} disablePanning>\n              <Geographies geography={worldJson}>\n                {(geographies, projection) => geographies.map((geography, i) => geography.id !== 'ATA' && (\n                  <Geography\n                    key={i}\n                    geography={geography}\n                    projection={projection}\n                    style={{\n                      default: {\n                        fill: '#f0f0f0',\n                        stroke: '#cdcdcd',\n                        strokeWidth: 0.75,\n                        outline: 'none',\n                      },\n                      hover: {\n                        fill: '#828282',\n                        stroke: '#cdcdcd',\n                        strokeWidth: 0.75,\n                        outline: 'none',\n                      },\n                    }}\n                  />\n                ))}\n              </Geographies>\n              <Markers>\n                {cities.map((marker, i) => (\n                  <Marker\n                    key={i}\n                    onMouseEnter={() => this.handleHover(`${marker.name} / ${capitalize(marker.country)}`)}\n                    onMouseLeave={() => this.handleHover(null)}\n                    onClick={() => push(`/destination/${marker.country}`)}\n                    marker={marker}\n                    style={{\n                      default: { stroke: '#505050' },\n                      hover: { stroke: '#FF5722' },\n                      pressed: { stroke: '#FF5722' },\n                    }}\n                  >\n                    <g transform=\"translate(-12, -24)\">\n                      <path\n                        fill=\"none\"\n                        strokeWidth=\"3\"\n                        strokeLinecap=\"square\"\n                        strokeMiterlimit=\"10\"\n                        strokeLinejoin=\"miter\"\n                        d=\"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\"\n                      />\n                      <circle\n                        fill=\"none\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"square\"\n                        strokeMiterlimit=\"10\"\n                        strokeLinejoin=\"miter\"\n                        cx=\"12\"\n                        cy=\"9\"\n                        r=\"3\"\n                      />\n                    </g>\n                  </Marker>\n                ))}\n              </Markers>\n            </ZoomableGroup>\n          </ComposableMap>\n          <Typography variant=\"headline\" className={classes.wrapper}>\n            {this.state.marker !== null ? this.state.marker : ''}\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nZoomPan.propTypes = {\n  classes: PropTypes.shape().isRequired,\n  center: PropTypes.arrayOf(PropTypes.number),\n  zoom: PropTypes.number,\n};\n\n\nZoomPan.defaultProps = {\n  center: [0, 20],\n  zoom: 1,\n};\n\n\nexport default withStyles(styles)(ZoomPan);\n"],"sourceRoot":""}