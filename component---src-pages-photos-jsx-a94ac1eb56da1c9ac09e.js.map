{"version":3,"sources":["webpack:///./src/pages/photos.jsx","webpack:///./src/components/posts.jsx"],"names":["PhotosArchive","_ref","posts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","title","_components_section__WEBPACK_IMPORTED_MODULE_4__","_components_posts__WEBPACK_IMPORTED_MODULE_5__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","shape","isRequired","pageQuery","__webpack_exports__","default","Object","_withRoot__WEBPACK_IMPORTED_MODULE_2__","Posts","classes","length","map","post","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_4___default","item","xs","sm","key","node","id","className","spacer","_cardPost__WEBPACK_IMPORTED_MODULE_5__","frontmatter","date","cover","tags","country","timeToRead","content","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2___default","component","excerpt","path","expand","type","arrayOf","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__","withStyles","theme","media","height","paddingTop","chip","margin","spacing","unit","textDecoration","paddingBottom"],"mappings":"kNAWA,SAASA,EAATC,GAAiC,IAChBC,EADgBD,EAARE,KACOC,kBAAtBC,MACR,OACEC,EAAAC,EAAAC,cAACC,EAAAF,GAAIG,MAAM,wBACTJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACED,EAAAC,EAAAC,cAACI,EAAAL,GAAML,MAAOA,MAMtBF,EAAca,WACZV,KAAMW,EAAAP,EAAUQ,QAAQC,YAGnB,IAAMC,eAoCbC,EAAAC,QAAeC,OAAAC,EAAAd,EAAAa,CAASpB,+HCpCxB,SAASsB,EAATrB,GAEG,IADDsB,EACCtB,EADDsB,QAASrB,EACRD,EADQC,MAET,GAAIA,EAAMsB,OAAS,EACjB,OAAOtB,EAAMuB,IAAI,SAAAC,GAAA,OACfpB,EAAAC,EAAAC,cAACmB,EAAApB,GAAKqB,QAAKC,GAAI,GAAIC,GAAI,EAAGC,IAAKL,EAAKM,KAAKC,GAAIC,UAAWX,EAAQY,QAC9D7B,EAAAC,EAAAC,cAAC4B,EAAA7B,GACCG,MAAOgB,EAAKM,KAAKK,YAAY3B,MAC7B4B,KAAMZ,EAAKM,KAAKK,YAAYC,KAC5BC,MAAOb,EAAKM,KAAKK,YAAYE,MAC7BC,KAAMd,EAAKM,KAAKK,YAAYG,KAC5BC,QAASf,EAAKM,KAAKK,YAAYI,QAC/BC,WAAYhB,EAAKM,KAAKU,WACtBC,QACErC,EAAAC,EAAAC,cAACoC,EAAArC,GAAWsC,UAAU,KACnBnB,EAAKM,KAAKc,SAGfC,KAAMrB,EAAKM,KAAKK,YAAYU,KAC5BC,UACAC,KAAK,YAOf3B,EAAMT,WACJU,QAAST,EAAAP,EAAUQ,QAAQC,WAC3Bd,MAAOY,EAAAP,EAAU2C,QAAQpC,EAAAP,EAAUQ,SAASC,YAG9CE,EAAAX,EAAea,OAAA+B,EAAAC,WAAAhC,CAjDA,SAAAiC,GAAA,OACbC,OACEC,OAAQ,EACRC,WAAY,UAEdC,MACEC,OAAQL,EAAMM,QAAQC,MAExBlD,OACEmD,eAAgB,QAElB1B,QACEqB,WAAiC,EAArBH,EAAMM,QAAQC,KAC1BE,cAAoC,EAArBT,EAAMM,QAAQC,QAoClBxC,CAAmBE","file":"component---src-pages-photos-jsx-a94ac1eb56da1c9ac09e.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport withRoot from '../withRoot';\nimport App from '../components/layout';\nimport Section from '../components/section';\nimport Posts from '../components/posts';\n\nfunction PhotosArchive({ data }) {\n  const { edges: posts } = data.allMarkdownRemark;\n  return (\n    <App title=\"Photography articles\">\n      <Section>\n        <Posts posts={posts} />\n      </Section>\n    </App>\n  );\n}\n\nPhotosArchive.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n\nexport const pageQuery = graphql`\n  query PhotoQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: {type: {eq: \"photo\"}  }}\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 150)\n          id\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            type\n            country\n            cover {\n              childImageSharp {\n                fluid(maxHeight: 300) {\n                  base64\n                  aspectRatio\n                  src\n                  sizes\n                  srcSet\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default withRoot(PhotosArchive);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport CardPost from './cardPost';\n\n\nconst styles = theme => ({\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  chip: {\n    margin: theme.spacing.unit,\n  },\n  title: {\n    textDecoration: 'none',\n  },\n  spacer: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nfunction Posts({\n  classes, posts,\n}) {\n  if (posts.length > 0) {\n    return posts.map(post => (\n      <Grid item xs={12} sm={6} key={post.node.id} className={classes.spacer}>\n        <CardPost\n          title={post.node.frontmatter.title}\n          date={post.node.frontmatter.date}\n          cover={post.node.frontmatter.cover}\n          tags={post.node.frontmatter.tags}\n          country={post.node.frontmatter.country}\n          timeToRead={post.node.timeToRead}\n          content={(\n            <Typography component=\"p\">\n              {post.node.excerpt}\n            </Typography>\n          )}\n          path={post.node.frontmatter.path}\n          expand\n          type=\"list\"\n        />\n      </Grid>\n    ));\n  }\n}\n\nPosts.propTypes = {\n  classes: PropTypes.shape().isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n\nexport default withStyles(styles)(Posts);\n"],"sourceRoot":""}