{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/posts.jsx","webpack:///./src/components/map.jsx"],"names":["Index","_ref","classes","data","posts","allMarkdownRemark","edges","coords","Object","_components_tools__WEBPACK_IMPORTED_MODULE_13__","b","map","post","node","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_5___default","container","spacing","className","spacer","item","xs","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6___default","variant","headline","_components_posts__WEBPACK_IMPORTED_MODULE_11__","sm","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_7___default","paperSpacer","aboutTitle","aboutText","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8___default","aboutButton","color","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","fluid","file","childImageSharp","alt","_components_map__WEBPACK_IMPORTED_MODULE_12__","cities","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_3___default","shape","isRequired","pageQuery","__webpack_exports__","default","_withRoot__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","withStyles","theme","marginBottom","unit","marginTop","padding","textAlign","textDecoration","paddingBottom","fontSize","float","Posts","length","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_4___default","key","id","_cardPost__WEBPACK_IMPORTED_MODULE_5__","title","frontmatter","date","cover","tags","country","timeToRead","content","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2___default","component","excerpt","path","expand","type","prop_types__WEBPACK_IMPORTED_MODULE_1___default","arrayOf","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__","media","height","paddingTop","chip","margin","ZoomPan","props","_this","_Component","call","this","state","marker","handleHover","setState","handleMapClick","geography","properties","NAME","filter","city","gatsby__WEBPACK_IMPORTED_MODULE_3__","c","push","render","_this2","_this$props","center","zoom","react__WEBPACK_IMPORTED_MODULE_2___default","wrapper","react_simple_maps__WEBPACK_IMPORTED_MODULE_6__","ComposableMap","projectionConfig","scale","width","style","ZoomableGroup","disablePanning","Geographies","_static_world_50m_simplified_json__WEBPACK_IMPORTED_MODULE_9__","geographies","projection","Geography","onClick","fill","stroke","strokeWidth","outline","hover","Markers","Marker","coordinates","onMouseEnter","name","_tools__WEBPACK_IMPORTED_MODULE_8__","onMouseLeave","transform","strokeLinecap","strokeMiterlimit","strokeLinejoin","d","cx","cy","r","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5___default","N","react__WEBPACK_IMPORTED_MODULE_2__","Component","prop_types__WEBPACK_IMPORTED_MODULE_4___default","number","string","defaultProps","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_7__"],"mappings":"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","file":"component---src-pages-index-jsx-0659be9e462d6c4418e3.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\n\nimport withRoot from '../withRoot';\nimport App from '../components/layout';\nimport Posts from '../components/posts';\nimport Map from '../components/map';\nimport { coordinates } from '../components/tools';\n\nconst styles = theme => ({\n  spacer: {\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 3,\n  },\n  paperSpacer: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n  },\n  headline: {\n    padding: `${theme.spacing.unit * 2} 0`,\n    textAlign: 'center',\n  },\n  aboutTitle: {\n    textDecoration: 'underline',\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  aboutText: {\n    fontSize: 16,\n    paddingBottom: theme.spacing.unit * 3,\n  },\n  aboutButton: {\n    float: 'center',\n  },\n});\n\nfunction Index({\n  classes, data,\n}) {\n  const { edges: posts } = data.allMarkdownRemark;\n  const coords = coordinates(posts.map(post => post.node));\n  return (\n    <App>\n      <Grid container spacing={24} className={classes.spacer}>\n        <Grid item xs={12}>\n          <Typography variant=\"display1\" className={classes.headline}>\n            Featured articles\n          </Typography>\n        </Grid>\n        <Posts posts={posts} />\n        <Grid item xs={12}>\n          <Typography variant=\"display1\" className={classes.headline}>\n            About us\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Paper className={classes.paperSpacer}>\n            <Typography variant=\"display1\" className={classes.aboutTitle}>\n              We are A and O\n            </Typography>\n            <Typography className={classes.aboutText}>\n              Hello there and welcome to the OAsome blog.\n              This is a blog of couple who guess what, their initials start with an A and an O.\n              They both really like visiting new places, finding out about interesting adventures\n              and take casual photos.\n              <br />\n              <br />\n              This blog also gives an area for friends to share some of their\n              experiences or fandfull trips they find out during their travel adventures\n            </Typography>\n            <Link to=\"/about\">\n              <Button className={classes.aboutButton} variant=\"raised\" color=\"primary\">\n                Read more\n              </Button>\n            </Link>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <Img fluid={data.file.childImageSharp.fluid} alt=\"Logo\" />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"display1\" className={classes.headline}>\n            Where we have been!\n          </Typography>\n        </Grid>\n        <Map cities={coords} />\n        <Grid item xs={12}>\n          <Typography variant=\"display1\" className={classes.headline}>\n            Latest articles\n          </Typography>\n        </Grid>\n        <Posts posts={posts} />\n      </Grid>\n    </App>\n  );\n}\n\nIndex.propTypes = {\n  classes: PropTypes.shape().isRequired,\n  data: PropTypes.shape().isRequired,\n};\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    file(relativePath: { eq: \"logo.png\" }) {\n      childImageSharp {\n        fluid(maxHeight: 400) {\n          ...GatsbyImageSharpFluid_noBase64\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 6\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 150)\n          id\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            coordinates {\n              country\n              coordinates\n            }\n            country\n            cover {\n              childImageSharp{\n                fluid(maxHeight: 300) {\n                    ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default withRoot(withStyles(styles)(Index));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport CardPost from './cardPost';\n\n\nconst styles = theme => ({\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  chip: {\n    margin: theme.spacing.unit,\n  },\n  title: {\n    textDecoration: 'none',\n  },\n  spacer: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nfunction Posts({\n  classes, posts,\n}) {\n  if (posts.length > 0) {\n    return posts.map(post => (\n      <Grid item xs={12} sm={6} key={post.node.id} className={classes.spacer}>\n        <CardPost\n          title={post.node.frontmatter.title}\n          date={post.node.frontmatter.date}\n          cover={post.node.frontmatter.cover}\n          tags={post.node.frontmatter.tags}\n          country={post.node.frontmatter.country}\n          timeToRead={post.node.timeToRead}\n          content={(\n            <Typography component=\"p\">\n              {post.node.excerpt}\n            </Typography>\n          )}\n          path={post.node.frontmatter.path}\n          expand\n          type=\"list\"\n        />\n      </Grid>\n    ));\n  }\n}\n\nPosts.propTypes = {\n  classes: PropTypes.shape().isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n\nexport default withStyles(styles)(Posts);\n","\nimport React, { Component } from 'react';\nimport { push } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Markers,\n  Marker,\n} from 'react-simple-maps';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { capitalize } from './tools';\nimport worldJson from '../static/world-50m-simplified.json';\n\n\nconst styles = {\n  wrapper: {\n    width: '100%',\n    margin: '0 auto',\n  },\n};\n\nclass ZoomPan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      marker: false,\n    };\n  }\n\n  handleHover(marker) {\n    this.setState({\n      marker,\n    });\n  }\n\n  handleMapClick(geography) {\n    const { cities } = this.props;\n    // TODO Temporary fix. Will need to create a mapping later\n    const country = geography.properties.NAME === 'United States of America' ? 'Usa' : geography.properties.NAME;\n    const destination = cities.filter(city => city.country === country);\n    if (destination.length > 0) {\n      push(`/destination/${country}`);\n    }\n  }\n\n  render() {\n    const {\n      cities,\n      classes,\n      center,\n      zoom,\n    } = this.props;\n\n    return (\n      <div>\n        <div className={classes.wrapper}>\n          <ComposableMap\n            projectionConfig={{\n              scale: 340,\n            }}\n            width={1400}\n            height={900}\n            style={{\n              width: '100%',\n              height: 'auto',\n            }}\n          >\n            <ZoomableGroup center={center} zoom={zoom} disablePanning>\n              <Geographies geography={worldJson}>\n                {(geographies, projection) => geographies.map(geography => geography.id !== 'ATA' && (\n                  <Geography\n                    key={geography.properties.NAME}\n                    geography={geography}\n                    projection={projection}\n                    onClick={() => this.handleMapClick(geography)}\n                    style={{\n                      default: {\n                        fill: '#f0f0f0',\n                        stroke: '#cdcdcd',\n                        strokeWidth: 0.75,\n                        outline: 'none',\n                      },\n                      hover: {\n                        fill: '#828282',\n                        stroke: '#cdcdcd',\n                        strokeWidth: 0.75,\n                        outline: 'none',\n                      },\n                    }}\n                  />\n                ))}\n              </Geographies>\n              <Markers>\n                {cities.map(marker => (\n                  <Marker\n                    key={marker.coordinates}\n                    onMouseEnter={() => this.handleHover(`${marker.name} / ${capitalize(marker.country)}`)}\n                    onMouseLeave={() => this.handleHover(null)}\n                    marker={marker}\n                    style={{\n                      default: { stroke: '#505050' },\n                    }}\n                  >\n                    <g transform=\"translate(-12, -24)\">\n                      <path\n                        fill=\"none\"\n                        strokeWidth=\"3\"\n                        strokeLinecap=\"square\"\n                        strokeMiterlimit=\"10\"\n                        strokeLinejoin=\"miter\"\n                        d=\"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\"\n                      />\n                      <circle\n                        fill=\"none\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"square\"\n                        strokeMiterlimit=\"10\"\n                        strokeLinejoin=\"miter\"\n                        cx=\"12\"\n                        cy=\"9\"\n                        r=\"3\"\n                      />\n                    </g>\n                  </Marker>\n                ))}\n              </Markers>\n            </ZoomableGroup>\n          </ComposableMap>\n          <Typography variant=\"headline\" className={classes.wrapper}>\n            {this.state.marker !== null ? this.state.marker : ''}\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nZoomPan.propTypes = {\n  classes: PropTypes.shape().isRequired,\n  center: PropTypes.arrayOf(PropTypes.number),\n  zoom: PropTypes.number,\n  cities: PropTypes.arrayOf(PropTypes.shape({\n    coordinates: PropTypes.arrayOf(PropTypes.number),\n    country: PropTypes.string,\n  })),\n};\n\n\nZoomPan.defaultProps = {\n  center: [0, 20],\n  zoom: 1,\n  cities: [],\n};\n\n\nexport default withStyles(styles)(ZoomPan);\n"],"sourceRoot":""}